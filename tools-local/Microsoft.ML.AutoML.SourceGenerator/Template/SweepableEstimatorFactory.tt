<#@ template language="C#" linePragmas="false" visibility = "internal" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using System;
using System.Collections.Generic;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Microsoft.ML.SearchSpace;
using Microsoft.ML;

namespace <#=NameSpace#>
{
    internal static class SweepableEstimatorFactory
    {
<# foreach((var estimator, var tOption) in EstimatorNames){#>
        public static <#=estimator#> Create<#=estimator#>(<#=tOption#> defaultOption, SearchSpace<<#=tOption#>> searchSpace = null)
        {
            if(searchSpace == null){
                searchSpace = new SearchSpace<<#=tOption#>>(defaultOption);
            }

            return new <#=estimator#>(defaultOption, searchSpace);
        }

<#}#>
    }
}

<#+
public string NameSpace {get;set;}
public IEnumerable<(string, string)> EstimatorNames {get;set;}
#>
