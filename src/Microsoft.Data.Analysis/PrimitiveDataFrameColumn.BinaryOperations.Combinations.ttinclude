
<#+
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

// Generated from PrimitiveDataFrameColumn.BinaryOperations.Combinations.tt. Do not modify directly

public class TypeCombination
{
       private string _thisColumnType;
       private string _otherColumnType;
       private string _returnColumnType;

       public TypeCombination(string thisColumnType, string otherColumnType, string returnColumnType)
       {
           _thisColumnType = thisColumnType;
           _otherColumnType = otherColumnType;
           _returnColumnType = returnColumnType;
       }
       public string ThisColumnType => _thisColumnType;
       public string OtherColumnType => _otherColumnType;
       public string ReturnColumnType => _returnColumnType;
}

public static class BinaryOperationCombinations
{

    public static List<TypeCombination> binaryOperationCombinations = new List<TypeCombination>
    {
        new TypeCombination("byte", "byte", "int"),
        new TypeCombination("byte", "decimal", "decimal"),
        new TypeCombination("byte", "double", "double"),
        new TypeCombination("byte", "float", "float"),
        new TypeCombination("byte", "int", "int"),
        new TypeCombination("byte", "long", "long"),
        new TypeCombination("byte", "sbyte", "int"),
        new TypeCombination("byte", "short", "int"),
        new TypeCombination("byte", "uint", "uint"),
        new TypeCombination("byte", "ulong", "ulong"),
        new TypeCombination("byte", "ushort", "int"),
        new TypeCombination("decimal", "byte", "decimal"),
        new TypeCombination("decimal", "decimal", "decimal"),
        new TypeCombination("decimal", "int", "decimal"),
        new TypeCombination("decimal", "long", "decimal"),
        new TypeCombination("decimal", "sbyte", "decimal"),
        new TypeCombination("decimal", "short", "decimal"),
        new TypeCombination("decimal", "uint", "decimal"),
        new TypeCombination("decimal", "ulong", "decimal"),
        new TypeCombination("decimal", "ushort", "decimal"),
        new TypeCombination("double", "byte", "double"),
        new TypeCombination("double", "double", "double"),
        new TypeCombination("double", "float", "double"),
        new TypeCombination("double", "int", "double"),
        new TypeCombination("double", "long", "double"),
        new TypeCombination("double", "sbyte", "double"),
        new TypeCombination("double", "short", "double"),
        new TypeCombination("double", "uint", "double"),
        new TypeCombination("double", "ulong", "double"),
        new TypeCombination("double", "ushort", "double"),
        new TypeCombination("float", "byte", "float"),
        new TypeCombination("float", "double", "double"),
        new TypeCombination("float", "float", "float"),
        new TypeCombination("float", "int", "float"),
        new TypeCombination("float", "long", "float"),
        new TypeCombination("float", "sbyte", "float"),
        new TypeCombination("float", "short", "float"),
        new TypeCombination("float", "uint", "float"),
        new TypeCombination("float", "ulong", "float"),
        new TypeCombination("float", "ushort", "float"),
        new TypeCombination("int", "byte", "int"),
        new TypeCombination("int", "decimal", "decimal"),
        new TypeCombination("int", "double", "double"),
        new TypeCombination("int", "float", "float"),
        new TypeCombination("int", "int", "int"),
        new TypeCombination("int", "long", "long"),
        new TypeCombination("int", "sbyte", "int"),
        new TypeCombination("int", "short", "int"),
        new TypeCombination("int", "uint", "long"),
        new TypeCombination("int", "ulong", "float"),
        new TypeCombination("int", "ushort", "int"),
        new TypeCombination("long", "byte", "long"),
        new TypeCombination("long", "decimal", "decimal"),
        new TypeCombination("long", "double", "double"),
        new TypeCombination("long", "float", "float"),
        new TypeCombination("long", "int", "long"),
        new TypeCombination("long", "long", "long"),
        new TypeCombination("long", "sbyte", "long"),
        new TypeCombination("long", "short", "long"),
        new TypeCombination("long", "uint", "long"),
        new TypeCombination("long", "ushort", "long"),
        new TypeCombination("sbyte", "byte", "int"),
        new TypeCombination("sbyte", "decimal", "decimal"),
        new TypeCombination("sbyte", "double", "double"),
        new TypeCombination("sbyte", "float", "float"),
        new TypeCombination("sbyte", "int", "int"),
        new TypeCombination("sbyte", "long", "long"),
        new TypeCombination("sbyte", "sbyte", "int"),
        new TypeCombination("sbyte", "short", "int"),
        new TypeCombination("sbyte", "uint", "long"),
        new TypeCombination("sbyte", "ulong", "float"),
        new TypeCombination("sbyte", "ushort", "int"),
        new TypeCombination("short", "byte", "int"),
        new TypeCombination("short", "decimal", "decimal"),
        new TypeCombination("short", "double", "double"),
        new TypeCombination("short", "float", "float"),
        new TypeCombination("short", "int", "int"),
        new TypeCombination("short", "long", "long"),
        new TypeCombination("short", "sbyte", "int"),
        new TypeCombination("short", "short", "int"),
        new TypeCombination("short", "uint", "long"),
        new TypeCombination("short", "ulong", "float"),
        new TypeCombination("short", "ushort", "int"),
        new TypeCombination("uint", "byte", "uint"),
        new TypeCombination("uint", "decimal", "decimal"),
        new TypeCombination("uint", "double", "double"),
        new TypeCombination("uint", "float", "float"),
        new TypeCombination("uint", "int", "long"),
        new TypeCombination("uint", "long", "long"),
        new TypeCombination("uint", "sbyte", "long"),
        new TypeCombination("uint", "short", "long"),
        new TypeCombination("uint", "uint", "uint"),
        new TypeCombination("uint", "ulong", "ulong"),
        new TypeCombination("uint", "ushort", "uint"),
        new TypeCombination("ulong", "byte", "ulong"),
        new TypeCombination("ulong", "decimal", "decimal"),
        new TypeCombination("ulong", "double", "double"),
        new TypeCombination("ulong", "float", "float"),
        new TypeCombination("ulong", "int", "float"),
        new TypeCombination("ulong", "sbyte", "float"),
        new TypeCombination("ulong", "short", "float"),
        new TypeCombination("ulong", "uint", "ulong"),
        new TypeCombination("ulong", "ulong", "ulong"),
        new TypeCombination("ulong", "ushort", "ulong"),
        new TypeCombination("ushort", "byte", "int"),
        new TypeCombination("ushort", "decimal", "decimal"),
        new TypeCombination("ushort", "double", "double"),
        new TypeCombination("ushort", "float", "float"),
        new TypeCombination("ushort", "int", "int"),
        new TypeCombination("ushort", "long", "long"),
        new TypeCombination("ushort", "sbyte", "int"),
        new TypeCombination("ushort", "short", "int"),
        new TypeCombination("ushort", "uint", "uint"),
        new TypeCombination("ushort", "ulong", "ulong"),
        new TypeCombination("ushort", "ushort", "int"),
    };
}

public static class ComparisonOperationCombinations
{
    public static List<TypeCombination> comparisonOperationCombinations = new List<TypeCombination>
    {
        new TypeCombination("bool", "bool", "bool"),
        new TypeCombination("byte", "byte", "bool"),
        new TypeCombination("byte", "decimal", "bool"),
        new TypeCombination("byte", "double", "bool"),
        new TypeCombination("byte", "float", "bool"),
        new TypeCombination("byte", "int", "bool"),
        new TypeCombination("byte", "long", "bool"),
        new TypeCombination("byte", "sbyte", "bool"),
        new TypeCombination("byte", "short", "bool"),
        new TypeCombination("byte", "uint", "bool"),
        new TypeCombination("byte", "ulong", "bool"),
        new TypeCombination("byte", "ushort", "bool"),
        new TypeCombination("decimal", "byte", "bool"),
        new TypeCombination("decimal", "decimal", "bool"),
        new TypeCombination("decimal", "int", "bool"),
        new TypeCombination("decimal", "long", "bool"),
        new TypeCombination("decimal", "sbyte", "bool"),
        new TypeCombination("decimal", "short", "bool"),
        new TypeCombination("decimal", "uint", "bool"),
        new TypeCombination("decimal", "ulong", "bool"),
        new TypeCombination("decimal", "ushort", "bool"),
        new TypeCombination("double", "byte", "bool"),
        new TypeCombination("double", "double", "bool"),
        new TypeCombination("double", "float", "bool"),
        new TypeCombination("double", "int", "bool"),
        new TypeCombination("double", "long", "bool"),
        new TypeCombination("double", "sbyte", "bool"),
        new TypeCombination("double", "short", "bool"),
        new TypeCombination("double", "uint", "bool"),
        new TypeCombination("double", "ulong", "bool"),
        new TypeCombination("double", "ushort", "bool"),
        new TypeCombination("float", "byte", "bool"),
        new TypeCombination("float", "double", "bool"),
        new TypeCombination("float", "float", "bool"),
        new TypeCombination("float", "int", "bool"),
        new TypeCombination("float", "long", "bool"),
        new TypeCombination("float", "sbyte", "bool"),
        new TypeCombination("float", "short", "bool"),
        new TypeCombination("float", "uint", "bool"),
        new TypeCombination("float", "ulong", "bool"),
        new TypeCombination("float", "ushort", "bool"),
        new TypeCombination("int", "byte", "bool"),
        new TypeCombination("int", "decimal", "bool"),
        new TypeCombination("int", "double", "bool"),
        new TypeCombination("int", "float", "bool"),
        new TypeCombination("int", "int", "bool"),
        new TypeCombination("int", "long", "bool"),
        new TypeCombination("int", "sbyte", "bool"),
        new TypeCombination("int", "short", "bool"),
        new TypeCombination("int", "uint", "bool"),
        new TypeCombination("int", "ulong", "bool"),
        new TypeCombination("int", "ushort", "bool"),
        new TypeCombination("long", "byte", "bool"),
        new TypeCombination("long", "decimal", "bool"),
        new TypeCombination("long", "double", "bool"),
        new TypeCombination("long", "float", "bool"),
        new TypeCombination("long", "int", "bool"),
        new TypeCombination("long", "long", "bool"),
        new TypeCombination("long", "sbyte", "bool"),
        new TypeCombination("long", "short", "bool"),
        new TypeCombination("long", "uint", "bool"),
        new TypeCombination("long", "ushort", "bool"),
        new TypeCombination("sbyte", "byte", "bool"),
        new TypeCombination("sbyte", "decimal", "bool"),
        new TypeCombination("sbyte", "double", "bool"),
        new TypeCombination("sbyte", "float", "bool"),
        new TypeCombination("sbyte", "int", "bool"),
        new TypeCombination("sbyte", "long", "bool"),
        new TypeCombination("sbyte", "sbyte", "bool"),
        new TypeCombination("sbyte", "short", "bool"),
        new TypeCombination("sbyte", "uint", "bool"),
        new TypeCombination("sbyte", "ulong", "bool"),
        new TypeCombination("sbyte", "ushort", "bool"),
        new TypeCombination("short", "byte", "bool"),
        new TypeCombination("short", "decimal", "bool"),
        new TypeCombination("short", "double", "bool"),
        new TypeCombination("short", "float", "bool"),
        new TypeCombination("short", "int", "bool"),
        new TypeCombination("short", "long", "bool"),
        new TypeCombination("short", "sbyte", "bool"),
        new TypeCombination("short", "short", "bool"),
        new TypeCombination("short", "uint", "bool"),
        new TypeCombination("short", "ulong", "bool"),
        new TypeCombination("short", "ushort", "bool"),
        new TypeCombination("uint", "byte", "bool"),
        new TypeCombination("uint", "decimal", "bool"),
        new TypeCombination("uint", "double", "bool"),
        new TypeCombination("uint", "float", "bool"),
        new TypeCombination("uint", "int", "bool"),
        new TypeCombination("uint", "long", "bool"),
        new TypeCombination("uint", "sbyte", "bool"),
        new TypeCombination("uint", "short", "bool"),
        new TypeCombination("uint", "uint", "bool"),
        new TypeCombination("uint", "ulong", "bool"),
        new TypeCombination("uint", "ushort", "bool"),
        new TypeCombination("ulong", "byte", "bool"),
        new TypeCombination("ulong", "decimal", "bool"),
        new TypeCombination("ulong", "double", "bool"),
        new TypeCombination("ulong", "float", "bool"),
        new TypeCombination("ulong", "int", "bool"),
        new TypeCombination("ulong", "sbyte", "bool"),
        new TypeCombination("ulong", "short", "bool"),
        new TypeCombination("ulong", "uint", "bool"),
        new TypeCombination("ulong", "ulong", "bool"),
        new TypeCombination("ulong", "ushort", "bool"),
        new TypeCombination("ushort", "byte", "bool"),
        new TypeCombination("ushort", "decimal", "bool"),
        new TypeCombination("ushort", "double", "bool"),
        new TypeCombination("ushort", "float", "bool"),
        new TypeCombination("ushort", "int", "bool"),
        new TypeCombination("ushort", "long", "bool"),
        new TypeCombination("ushort", "sbyte", "bool"),
        new TypeCombination("ushort", "short", "bool"),
        new TypeCombination("ushort", "uint", "bool"),
        new TypeCombination("ushort", "ulong", "bool"),
        new TypeCombination("ushort", "ushort", "bool"),
    };
}
#>
