<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>

    <member name="TensorflowTransform">
      <summary>
        Extracts hidden layers&apos; values from a pre-trained Tensorflow model.
      </summary>
      <remarks>
        <para>
          The TensorFlowTransform extracts specified outputs using a pre-trained <a href="https://www.tensorflow.org">Tensorflow</a> model.
          The transform takes as inputs the pre-trained Tensorflow model, the names of the input nodes, and names of the output nodes whose values we want to extract. 
        </para>

        <para>
          This transform requires the <a href="https://dotnet.myget.org/feed/dotnet-core/package/nuget/Microsoft.ML.TensorFlow">Microsoft.ML.TensorFlow</a> nuget to be installed.
          The TensorFlowTransform has the following assumptions regarding input, output and processing of data.
        </para>
        <list type="number">
          <item>
            <description>
              For the input model, currently the TensorFlowTransform supports both the <a href="https://www.tensorflow.org/mobile/prepare_models">Frozen model</a> format and also the <a href="https://www.tensorflow.org/guide/saved_model#build_and_load_a_savedmodel">SavedModel</a> format.
            </description>
          </item>
          <item>
            <description>The transform supports scoring only one example at a time.</description>
          </item>
          <item>
            <description>The name of input column(s) should match the name of input(s) in TensorFlow model.</description>
          </item>
          <item>
            <description>The name of each output column should match one of the operations in the TensorFlow graph.</description>
          </item>
          <item>
            <description>Currently, float and double are the only acceptable data types for input/output.</description>
          </item>
          <item>
            <description>Upon success, the transform will introduce a new column in <see cref="IDataView"/> corresponding to each output column specified.</description>
          </item>
        </list>

        The inputs and outputs of a TensorFlow model can be obtained using the <a href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/tools/graph_transforms/README.md#inspecting-graphs">
          <code>summarize_graph</code> tool
        </a>.

      </remarks>
      <example>
        <code language="csharp">
          pipeline.Add(new TextLoader(dataFile).CreateFrom&lt;MNISTData&gt;(useHeader: false));
          pipeline.Add(new ColumnCopier(("NumericImageVec", "Input");
          pipeline.Add(new TensorFlowScorer()
          {
            Model = model_location;
            InputColumns = new[] { "Input" };
            OutputColumns = new[] { "Output" };
          }
        </code>
      </example>
      <example>
        <code language="csharp">
          var pipeline = new Legacy.LearningPipeline(seed: 1);
          pipeline.Add(new Microsoft.ML.Legacy.Data.TextLoader(dataFile).CreateFrom&lt;CifarData&gt;(useHeader: false));
          pipeline.Add(new ImageLoader(("ImagePath", "ImageReal"))
          {
            ImageFolder = imageFolder
          });

          pipeline.Add(new ImageResizer(("ImageReal", "ImageCropped"))
          {
            ImageHeight = imageHeight,
            ImageWidth = imageWidth,
            Resizing = ImageResizerTransformResizingKind.IsoCrop
          });

          pipeline.Add(new ImagePixelExtractor(("ImageCropped", "Input"))
          {
            UseAlpha = false,
            InterleaveArgb = true
          });

          pipeline.Add(new TensorFlowScorer()
          {
            Model = model_location,
            InputColumns = new[] { "Input" },
            OutputColumns = new[] { "Output" }
          });

        </code>
    </example>
    </member>

  </members>
</doc>
