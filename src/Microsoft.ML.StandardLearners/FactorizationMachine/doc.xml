<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    
    <member name="FieldAwareFactorizationMachineBinaryClassifier">
      <summary>
        Train a field-aware factorization machine for binary classification using ADAGRAD (an advanced stochastic gradient method). 
      </summary>
      <remarks>
        Field Aware Factorization Machines use, in addition to the input variables, factorized parameters to model the interaction between pairs of variables.
        The algorithm is particularly useful for high dimensional datasets which can be very sparse (e.g. click-prediction for advertising systems).
        <para>An advantage of FFM over SVMs is that the training data does not need to be stored in memory, and the coefficients can be optimized directly.
          For a general idea of what Field-aware Factorization Machines are see: <a href='https://www.csie.ntu.edu.tw/~r01922136/slides/ffm.pdf'>Field Aware Factorization Machines</a>
        </para>
        <para>See references below for more details. 
        This trainer is essentially faster the one introduced in [2] because of some implemtation tricks[3].
        </para>
          <list type='bullet'>
            <item>
              <description><a href='https://www.csie.ntu.edu.tw/~cjlin/papers/ffm.pdf'>Field-aware Factorization Machines for CTR Prediction</a></description></item>
            <item>
              <description><a href='http://jmlr.org/papers/volume12/duchi11a/duchi11a.pdf'>Adaptive Subgradient Methods for Online Learning and Stochastic Optimization</a></description>
            </item>
            <item>
              <description><a href='https://github.com/wschin/fast-ffm/blob/master/fast-ffm.pdf'>An Improved Stochastic Gradient Method for Training Large-scale Field-aware Factorization Machine.</a></description>
            </item>
          </list>
      </remarks>
    </member>
    <example name="FieldAwareFactorizationMachineBinaryClassifier">
      <example>
        <code language="csharp">
          pipeline.Add(new FieldAwareFactorizationMachineBinaryClassifier
          { 
            LearningRate = 0.5f, 
            Iter=2 
          });
        </code>
      </example>
    </example>
        
  </members>
</doc>
