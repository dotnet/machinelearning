<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Pack">
  <Import Project="$(RepoRoot)eng/pkg/Pack.props"/>
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <!-- To include the DLL and PDBs of the underlying projects
    We need to remove the IncludeBuildOutput=false. This also generates a
    Microsoft.ML.dll in the nuget package, and a Microsoft.ML.pdb in the .snupkg
    But these are to be ignored, as they don't contain anything meaningful-->
    <!-- <IncludeBuildOutput>false</IncludeBuildOutput> -->
    <NoWarn>$(NoWarn);NU5127;NU5128</NoWarn>
    <PackageDescription>ML.NET is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers.</PackageDescription>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="../Microsoft.ML.DataView/Microsoft.ML.DataView.csproj" />
    <ProjectReference Include="../Microsoft.ML.CpuMath/Microsoft.ML.CpuMath.csproj" />
    <ProjectReference Include="../Microsoft.ML.Core/Microsoft.ML.Core.csproj">
      <IncludeInNuget>true</IncludeInNuget>
      <PrivateAssets>all</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="../Microsoft.ML.Data/Microsoft.ML.Data.csproj">
      <IncludeInNuget>true</IncludeInNuget>
      <PrivateAssets>all</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="../Microsoft.ML.KMeansClustering/Microsoft.ML.KMeansClustering.csproj">
      <IncludeInNuget>true</IncludeInNuget>
      <PrivateAssets>all</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="../Microsoft.ML.PCA/Microsoft.ML.PCA.csproj">
      <IncludeInNuget>true</IncludeInNuget>
      <PrivateAssets>all</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="../Microsoft.ML.StandardTrainers/Microsoft.ML.StandardTrainers.csproj">
      <IncludeInNuget>true</IncludeInNuget>
      <PrivateAssets>all</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="../Microsoft.ML.Transforms/Microsoft.ML.Transforms.csproj">
      <IncludeInNuget>true</IncludeInNuget>
      <PrivateAssets>all</PrivateAssets>
    </ProjectReference>
    <NativeAssemblyReference Include="LdaNative" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonPackageVersion)" />
    <PackageReference Include="System.Reflection.Emit.Lightweight" Version="$(SystemReflectionEmitLightweightPackageVersion)" />
    <PackageReference Include="System.CodeDom" Version="$(SystemCodeDomPackageVersion)" />
    <PackageReference Include="System.Memory" Version="$(SystemMemoryVersion)" />
    <PackageReference Include="System.Collections.Immutable" Version="$(SystemCollectionsImmutableVersion)" />
    <PackageReference Include="System.Threading.Channels" Version="$(SystemThreadingChannelsPackageVersion)" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="$(RepoRoot)eng\pkg\CommonPackage.props" Pack="true" PackagePath="build\netstandard2.0\$(MSBuildProjectName).props" />
    <Content Include="build\**\*" Pack="true" PackagePath="build" />
  </ItemGroup>
<PropertyGroup>
  <!--Include Project References output-->
  <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
</PropertyGroup>
  <Target DependsOnTargets="ResolveReferences" Name="CopyProjectReferencesToPackage">
    <ItemGroup>
      <!--Include DLLs of Project References-->
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('IncludeInNuget','true'))"/>
      <!--Include PDBs of Project References-->
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('IncludeInNuget','true')->Replace('.dll', '.pdb'))"/>
      <!--Include PDBs for Native binaries-->
      <!--The path needed to be hardcoded for this to work on our publishing CI-->
      <BuildOutputInPackage Condition="Exists('$(PackageAssetsPath)$(PackageIdFolderName)\runtimes\win-x86\native\LdaNative.pdb')" Include="$(PackageAssetsPath)$(PackageIdFolderName)\runtimes\win-x86\native\LdaNative.pdb" TargetPath="..\..\runtimes\win-x86\native"/>
      <BuildOutputInPackage Condition="Exists('$(PackageAssetsPath)$(PackageIdFolderName)\runtimes\win-x64\native\LdaNative.pdb')" Include="$(PackageAssetsPath)$(PackageIdFolderName)\runtimes\win-x64\native\LdaNative.pdb" TargetPath="..\..\runtimes\win-x64\native"/>
    </ItemGroup>
  </Target>
</Project>