<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net8.0</TargetFrameworks>
    <Nullable>enable</Nullable>
    <IsPackable>true</IsPackable>
    <PackageDescription>Microsoft.ML.Tokenizers contains the implmentation of the tokenization used in the NLP transforms.</PackageDescription>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <Compile Remove="Utils/Helpers.netcoreapp.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != 'netstandard2.0'">
    <Compile Remove="Utils/Helpers.netstandard.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="$(GoogleProtobufVersion)" />
    <PackageReference Include="System.Text.Json" Version="$(SystemTextJsonVersion)" />
  </ItemGroup>

  <UsingTask TaskName="CompressFile"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs">
        foreach(var file in Files)
        {
            using var sourceStream = File.OpenRead(file.GetMetadata("FullPath"));
            using var destStream = new DeflateStream(File.Create(file.GetMetadata("Destination")), CompressionLevel.Optimal);
            sourceStream.CopyTo(destStream);
        }
      </Code>
    </Task>
  </UsingTask>

  <ItemGroup>
    <FilesToCompress Include="Data\**\*.*" Destination="$(IntermediateOutputPath)%(FileName).zip"/>
  </ItemGroup>

  <Target Name="TestCompress"
          BeforeTargets="AssignTargetPaths"
          Inputs="@(FilesToCompress)"
          Outputs="@(FilesToCompress->'%(Destination)')">

    <CompressFile Files="@(FilesToCompress)" />
    <ItemGroup>
      <EmbeddedResource Include="@(FilesToCompress->'%(Destination)')" LogicalName="%(FileName)%(Extension).zip" />
    </ItemGroup>
  </Target>
</Project>
