{
  "name": "CodeSign",
  "shortDescription": "Run Code Signature Validation",
  "longDescription": "Validate files contain valid code signatures",
  "fileVersion": "1.1.0",
  "toolVersion": "1.1.0",
  "arguments": [
    {
      "id": "enabledPlugins",
      "argumentType": "MultiPositional",
      "default": [
        "/plugins:CodeSignValidation:enabled=true"
      ],
      "displayName": "Enabled Plugins",
      "required": true
    },
    {
      "id": "targetFiles",
      "argumentType": "KeyValue",
      "displayName": "File filter to scan",
      "key": "plugins:CodeSignValidation:options:targetFiles",
      "shortDescription": "Glob pattern to select which files to target",
      "longDescription": "Defaults to all files ending in .dll, .exe, .sys, .ps1, .ps1xml, .psc1, .psd1, .cdxml, .mof, .vbs, .js, and .wsf, excluding those ending in .nd.dll or those in the .gdn folder",
      "required": false
    },
    {
      "id": "policyFile",
      "argumentType": "KeyValue",
      "displayName": "CI Policy Path",
      "key": "plugins:CodeSignValidation:options:policyFile",
      "shortDescription": "Path to the CSV policy to use",
      "longDescription": "Defaults to the include Azure Security Pack policy. Relative paths are resolved based on the location of the CSV plugin folder.",
      "required": false
    },
    {
      "id": "catalogPath",
      "argumentType": "KeyValue",
      "displayName": "Catalog Path",
      "key": "plugins:CodeSignValidation:options:catalogPath",
      "shortDescription": "Absolute path to a directory containing .cat files for signature validation",
      "value": "",
      "required": false
    },
    {
      "id": "targetDirectory",
      "argumentType": "KeyValue",
      "key": "targetDirectory",
      "displayName": "Target Directory",
      "default": "$(WorkingDirectory)",
      "shortDescription": "Absolute path to the directory to scan"
    },
    {
      "id": "outputDirectory",
      "argumentType": "KeyValue",
      "displayName": "Output Directory",
      "shortDescription": "Absolute path to the directory to write output files",
      "key": "outputDirectory"
    }
  ],
  "bugFilingFilter": null,
  "commandLineOptions": {
    "argumentPrefix": "/",
    "keyValueSeparator": "=",
    "outputArgumentId": "outputDirectory",
    "targetArgumentId": "targetDirectory",
    "targetType": "directory"
  },
  "errorExitCodes": {
    "255": "An unexpected exception occurred"
  },
  "executablePath": "tools\\Phalanx.dll",
  "fullName": "Phalanx",
  "launcher": "NetCore",
  "launcherArguments": null,
  "links": [
    {
      "name": "Phalanx project",
      "uri": "https://dev.azure.com/SecurityIntegration/Phalanx"
    }
  ],
  "outputExtension": "sarif",
  "outputPathSuffixSeparator": null,
  "outputTypeString": "Folder",
  "packages": [
    {
      "name": "Phalanx",
      "version": "1.1.0",
      "type": "nuget",
      "master": true,
      "prerelease": true,
      "sources": [
        {
          "name": "Phalanx"
        }
      ]
    }
  ],
  "successfulExitCodes": [
    0,
    1
  ],
  "supportsBugFiling": false,
  "converterInfo": {
    "convertExpected": false
  }
}