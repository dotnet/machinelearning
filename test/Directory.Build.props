<Project>
  <Import Project="..\Directory.Build.props" />

  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.1;net461</TargetFrameworks>
    <TargetFrameworks Condition="'$(OS)' != 'Windows_NT'">netcoreapp3.1</TargetFrameworks>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('OSX')) AND '$(TargetArchitecture)' == 'arm64'">net6.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(TestTargetFramework)' != ''">$(TestTargetFramework)</TargetFrameworks>
    <RuntimeIdentifier Condition="'$(TargetFramework)' == 'net461'">win-x64</RuntimeIdentifier>
    <IsTestProject>true</IsTestProject>
    <IsPackable>false</IsPackable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GenerateDependencyFile>true</GenerateDependencyFile>
    <!--
      Don't warn about missing documentation in test projects.

      CS1573: Parameter 'parameter' has no matching param tag in the XML comment for 'parameter' (but other parameters do)
      CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
      CS1712: Type parameter 'parameter' has no matching typeparam tag in the XML comment on 'Type_or_Member' (but other type parameters do)
    -->
    <NoWarn>$(NoWarn),1573,1591,1712</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <VSTestLogger>trx</VSTestLogger>
    <VSTestResultsDirectory>$(OutputPath)</VSTestResultsDirectory>
    <CopyLocalLockFileAssemblies Condition="'$(Coverage)' != 'true'">true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MSTest.TestFramework" Version="$(MSTestTestFrameworkVersion)" />
    <PackageReference Include="MSTest.TestAdapter" Version="$(MSTestTestAdapterVersion)" />
    <PackageReference Include="Xunit.Combinatorial" Version="$(XunitCombinatorialVersion)" />
    <PackageReference Include="Microsoft.DotNet.XUnitExtensions" Version="$(MicrosoftDotNetXUnitExtensionsVersion)" />
    <PackageReference Include="coverlet.collector" Version="$(CoverletCollectorVersion)" />

    <!-- workaround stale references in test packages by 
         1) updating NETStandard.Library - the newer version brings less references on netstandard2.0 compatible frameworks.
         2) updating Microsoft.NETCore.Targets - the newer version prevents .NETCore 1.x era runtime.* packages from being referenced. -->
    <PackageReference Include="NETStandard.Library" Version="2.0.3" />
    <PackageReference Include="Microsoft.NETCore.Targets" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference
      Condition="'$(UseMLCodeAnalyzer)' != 'false' and '$(MSBuildProjectExtension)' == '.csproj'"
      Include="$(MSBuildThisFileDirectory)\..\tools-local\Microsoft.ML.InternalCodeAnalyzer\Microsoft.ML.InternalCodeAnalyzer.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <OutputItemType>Analyzer</OutputItemType>
    </ProjectReference>
  </ItemGroup>

</Project>
