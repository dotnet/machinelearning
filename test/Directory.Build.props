<Project>
  <Import Project="..\Directory.Build.props" />

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TargetFramework Condition="$(Configuration.EndsWith('-netfx'))">net461</TargetFramework>
    <TargetFramework Condition="$(Configuration.EndsWith('-netcoreapp3_0'))">netcoreapp3.0</TargetFramework>
    <RuntimeIdentifier Condition="'$(TargetFramework)' == 'net461'">win-x64</RuntimeIdentifier>
    <IsPackable>false</IsPackable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <!--
      Don't warn about missing documentation in test projects.

      CS1573: Parameter 'parameter' has no matching param tag in the XML comment for 'parameter' (but other parameters do)
      CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
      CS1712: Type parameter 'parameter' has no matching typeparam tag in the XML comment on 'Type_or_Member' (but other type parameters do)
    -->
    <NoWarn>$(NoWarn),1573,1591,1712</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <VSTestLogger>trx</VSTestLogger>
    <VSTestResultsDirectory>$(OutputPath)</VSTestResultsDirectory>
    <AssemblyOriginatorKeyFile>$(ToolsDir)Test.snk</AssemblyOriginatorKeyFile>
    <CopyLocalLockFileAssemblies Condition="'$(TargetFramework)' == 'netcoreapp3.0'">false</CopyLocalLockFileAssemblies>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.8.0" />
    <PackageReference Include="xunit" Version="2.4.0" />
    <PackageReference Include="Xunit.Combinatorial" Version="$(XunitCombinatorialVersion)" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
    <PackageReference Include="Microsoft.DotNet.XUnitExtensions" Version="2.4.0-prerelease-63213-02" />
    <PackageReference Include="coverlet.msbuild" Version="$(CoverletVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference
      Condition="'$(UseMLCodeAnalyzer)' != 'false' and '$(MSBuildProjectExtension)' == '.csproj'"
      Include="$(MSBuildThisFileDirectory)\..\tools-local\Microsoft.ML.InternalCodeAnalyzer\Microsoft.ML.InternalCodeAnalyzer.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <OutputItemType>Analyzer</OutputItemType>
    </ProjectReference>
  </ItemGroup>

  <PropertyGroup Condition="'$(Coverage)' == 'true'">
      <!-- https://github.com/tonerdo/coverlet/issues/618 -->
      <IncludeTestAssembly>true</IncludeTestAssembly>

      <CollectCoverage>true</CollectCoverage>
      <SingleHit>true</SingleHit>
      <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies> <!-- https://github.com/tonerdo/coverlet/issues/72 -->
      <CoverletOutputFormat>opencover</CoverletOutputFormat>
      <CoverletOutput>$(BaseOutputPath)$(PlatformConfig)\coverage\$(MSBuildProjectName).coverage</CoverletOutput>
      <Include>[Microsoft.ML.*]*</Include>
      <!-- Excluding for perf reasons. These classes have tests that can be run conditionally
           but they need to be migrated. Excluding these classes should have very minimal effect on code coverage.
      -->
      <Exclude>[*]Microsoft.ML.*Contracts*,[*]Microsoft.ML.Internal.Utilities*,[*]Microsoft.ML.Data.VBuffer*</Exclude>
      <ExcludeByAttribute>Obsolete,ExcludeFromCodeCoverage</ExcludeByAttribute>
      <ExcludeByFile>$(RepoRoot)src\Microsoft.ML.OnnxConverter\OnnxMl.cs,$(RepoRoot)src\Microsoft.ML.TensorFlow\TensorFlow\Buffer.cs,$(RepoRoot)src\Microsoft.ML.TensorFlow\TensorFlow\Tensor.cs,$(RepoRoot)src\Microsoft.ML.TensorFlow\TensorFlow\Tensorflow.cs</ExcludeByFile>
  </PropertyGroup>

</Project>
