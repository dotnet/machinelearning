// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using Microsoft.ML;
using Test.Model;

namespace Test.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"\path\to\file";

        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample(DATA_FILEPATH);

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Label with predicted Label from sample data...\n\n");
            Console.WriteLine($"Age: {sampleData.Age}");
            Console.WriteLine($"Workclass: {sampleData.Workclass}");
            Console.WriteLine($"Fnlwgt: {sampleData.Fnlwgt}");
            Console.WriteLine($"Education: {sampleData.Education}");
            Console.WriteLine($"Education_num: {sampleData.Education_num}");
            Console.WriteLine($"Marital_status: {sampleData.Marital_status}");
            Console.WriteLine($"Occupation: {sampleData.Occupation}");
            Console.WriteLine($"Relationship: {sampleData.Relationship}");
            Console.WriteLine($"Race: {sampleData.Race}");
            Console.WriteLine($"Sex: {sampleData.Sex}");
            Console.WriteLine($"Capital_gain: {sampleData.Capital_gain}");
            Console.WriteLine($"Capital_loss: {sampleData.Capital_loss}");
            Console.WriteLine($"Hours_per_week: {sampleData.Hours_per_week}");
            Console.WriteLine($"Native_country: {sampleData.Native_country}");
            Console.WriteLine($"\n\nActual Label: {sampleData.Label} \nPredicted Label value {predictionResult.Prediction} \nPredicted Label scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: ',',
                                            allowQuoting: true,
                                            allowSparse: true);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)
                                                                        .First();
            return sampleForPrediction;
        }
        #endregion
    }
}
