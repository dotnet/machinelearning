{
  "irVersion": "6",
  "producerName": "ML.NET",
  "producerVersion": "##VERSION##",
  "domain": "machinelearning.dotnet",
  "graph": {
    "node": [
      {
        "input": [
          "FeatureVector"
        ],
        "output": [
          "Score"
        ],
        "name": "LinearRegressor",
        "opType": "LinearRegressor",
        "attribute": [
          {
            "name": "post_transform",
            "s": "Tk9ORQ==",
            "type": "STRING"
          },
          {
            "name": "targets",
            "i": "1",
            "type": "INT"
          },
          {
            "name": "coefficients",
            "floats": [
              77.0938,
              0.004988951,
              74.8866653,
              -0.0440528579,
              -0.0283487979,
              0.0493698753,
              19.3254948,
              3.936928,
              0.008048513,
              0.0898709446,
              82.81648
            ],
            "type": "FLOATS"
          },
          {
            "name": "intercepts",
            "floats": [
              373.881165
            ],
            "type": "FLOATS"
          }
        ],
        "domain": "ai.onnx.ml"
      },
      {
        "input": [
          "FeatureVector"
        ],
        "output": [
          "FeatureVector0"
        ],
        "name": "Identity",
        "opType": "Identity"
      },
      {
        "input": [
          "Target"
        ],
        "output": [
          "Target0"
        ],
        "name": "Identity0",
        "opType": "Identity"
      },
      {
        "input": [
          "Score"
        ],
        "output": [
          "Score0"
        ],
        "name": "Identity1",
        "opType": "Identity"
      }
    ],
    "name": "model",
    "input": [
      {
        "name": "FeatureVector",
        "type": {
          "tensorType": {
            "elemType": 1,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "11"
                }
              ]
            }
          }
        }
      },
      {
        "name": "Target",
        "type": {
          "tensorType": {
            "elemType": 1,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "1"
                }
              ]
            }
          }
        }
      }
    ],
    "output": [
      {
        "name": "FeatureVector0",
        "type": {
          "tensorType": {
            "elemType": 1,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "11"
                }
              ]
            }
          }
        }
      },
      {
        "name": "Target0",
        "type": {
          "tensorType": {
            "elemType": 1,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "1"
                }
              ]
            }
          }
        }
      },
      {
        "name": "Score0",
        "type": {
          "tensorType": {
            "elemType": 1,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "1"
                }
              ]
            }
          }
        }
      }
    ],
    "valueInfo": [
      {
        "name": "Score",
        "type": {
          "tensorType": {
            "elemType": 1,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "1"
                }
              ]
            }
          }
        }
      }
    ]
  },
  "opsetImport": [
    {
      "domain": "ai.onnx.ml",
      "version": "2"
    },
    {
      "version": "11"
    }
  ]
}