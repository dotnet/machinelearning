Data.CustomTextLoader	Import a dataset from a text file	Microsoft.ML.Runtime.EntryPoints.ImportTextData	ImportText	Microsoft.ML.Runtime.EntryPoints.ImportTextData+Input	Microsoft.ML.Runtime.EntryPoints.ImportTextData+Output
Data.DataViewReference	Pass dataview from memory to experiment	Microsoft.ML.Runtime.EntryPoints.DataViewReference	ImportData	Microsoft.ML.Runtime.EntryPoints.DataViewReference+Input	Microsoft.ML.Runtime.EntryPoints.DataViewReference+Output
Data.IDataViewArrayConverter	Create an array variable of IDataView	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro	MakeArray	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+ArrayIDataViewInput	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+ArrayIDataViewOutput
Data.PredictorModelArrayConverter	Create an array variable of IPredictorModel	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro	MakeArray	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+ArrayIPredictorModelInput	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+ArrayIPredictorModelOutput
Data.TextLoader	Import a dataset from a text file	Microsoft.ML.Runtime.EntryPoints.ImportTextData	TextLoader	Microsoft.ML.Runtime.EntryPoints.ImportTextData+LoaderInput	Microsoft.ML.Runtime.EntryPoints.ImportTextData+Output
Data.TransformModelArrayConverter	Create an array variable of ITransformModel	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro	MakeArray	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+ArrayITransformModelInput	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+ArrayITransformModelOutput
Models.AnomalyDetectionEvaluator	Evaluates an anomaly detection scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	AnomalyDetection	Microsoft.ML.Runtime.Data.AnomalyDetectionMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CommonEvaluateOutput
Models.AnomalyPipelineEnsemble	Combine anomaly detection models into an ensemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator	CreateAnomalyPipelineEnsemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator+PipelineAnomalyInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+AnomalyDetectionOutput
Models.BinaryClassificationEvaluator	Evaluates a binary classification scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	Binary	Microsoft.ML.Runtime.Data.BinaryClassifierMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+ClassificationEvaluateOutput
Models.BinaryCrossValidator	Cross validation for binary classification	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro	CrossValidateBinary	Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput`1[Microsoft.ML.Runtime.EntryPoints.CrossValidationBinaryMacro+Output]
Models.BinaryEnsemble	Combine binary classifiers into an ensemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator	CreateBinaryEnsemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator+ClassifierInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Models.BinaryPipelineEnsemble	Combine binary classification models into an ensemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator	CreateBinaryPipelineEnsemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator+PipelineClassifierInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Models.ClassificationEvaluator	Evaluates a multi class classification scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	MultiClass	Microsoft.ML.Runtime.Data.MultiClassMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+ClassificationEvaluateOutput
Models.ClusterEvaluator	Evaluates a clustering scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	Clustering	Microsoft.ML.Runtime.Data.ClusteringMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CommonEvaluateOutput
Models.CrossValidationResultsCombiner	Combine the metric data views returned from cross validation.	Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro	CombineMetrics	Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro+CombineMetricsInput	Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro+CombinedOutput
Models.CrossValidator	Cross validation for general learning	Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro	CrossValidate	Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput`1[Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro+Output]
Models.CrossValidatorDatasetSplitter	Split the dataset into the specified number of cross-validation folds (train and test sets)	Microsoft.ML.Runtime.EntryPoints.CVSplit	Split	Microsoft.ML.Runtime.EntryPoints.CVSplit+Input	Microsoft.ML.Runtime.EntryPoints.CVSplit+Output
Models.DatasetTransformer	Applies a TransformModel to a dataset.	Microsoft.ML.Runtime.EntryPoints.ModelOperations	Apply	Microsoft.ML.Runtime.EntryPoints.ModelOperations+ApplyTransformModelInput	Microsoft.ML.Runtime.EntryPoints.ModelOperations+ApplyTransformModelOutput
Models.EnsembleSummary	Summarize a pipeline ensemble predictor.	Microsoft.ML.Runtime.Ensemble.EntryPoints.PipelineEnsemble	Summarize	Microsoft.ML.Runtime.EntryPoints.SummarizePredictor+Input	Microsoft.ML.Runtime.Ensemble.EntryPoints.PipelineEnsemble+SummaryOutput
Models.FixedPlattCalibrator	Apply a Platt calibrator with a fixed slope and offset to an input model	Microsoft.ML.Runtime.Internal.Calibration.Calibrate	FixedPlatt	Microsoft.ML.Runtime.Internal.Calibration.Calibrate+FixedPlattInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CalibratorOutput
Models.MultiClassPipelineEnsemble	Combine multiclass classifiers into an ensemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator	CreateMultiClassPipelineEnsemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator+PipelineClassifierInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MulticlassClassificationOutput
Models.MultiOutputRegressionEvaluator	Evaluates a multi output regression scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	MultiOutputRegression	Microsoft.ML.Runtime.Data.MultiOutputRegressionMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CommonEvaluateOutput
Models.NaiveCalibrator	Apply a Naive calibrator to an input model	Microsoft.ML.Runtime.Internal.Calibration.Calibrate	Naive	Microsoft.ML.Runtime.Internal.Calibration.Calibrate+NoArgumentsInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CalibratorOutput
Models.OneVersusAll	One-vs-All macro (OVA)	Microsoft.ML.Runtime.EntryPoints.OneVersusAllMacro	OVA	Microsoft.ML.Runtime.EntryPoints.OneVersusAllMacro+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput`1[Microsoft.ML.Runtime.EntryPoints.OneVersusAllMacro+Output]
Models.OnnxConverter	Converts the model to ONNX format.	Microsoft.ML.Runtime.Model.Onnx.SaveOnnxCommand	Apply	Microsoft.ML.Runtime.Model.Onnx.SaveOnnxCommand+Arguments	Microsoft.ML.Runtime.Model.Onnx.SaveOnnxCommand+Output
Models.OvaModelCombiner	Combines a sequence of PredictorModels into a single model	Microsoft.ML.Runtime.Learners.OvaPredictor	CombineOvaModels	Microsoft.ML.Runtime.EntryPoints.ModelOperations+CombineOvaPredictorModelsInput	Microsoft.ML.Runtime.EntryPoints.ModelOperations+PredictorModelOutput
Models.PAVCalibrator	Apply a PAV calibrator to an input model	Microsoft.ML.Runtime.Internal.Calibration.Calibrate	Pav	Microsoft.ML.Runtime.Internal.Calibration.Calibrate+NoArgumentsInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CalibratorOutput
Models.PipelineSweeper	AutoML pipeline sweeping optimzation macro.	Microsoft.ML.Runtime.EntryPoints.PipelineSweeperMacro	PipelineSweep	Microsoft.ML.Runtime.EntryPoints.PipelineSweeperMacro+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput`1[Microsoft.ML.Runtime.EntryPoints.PipelineSweeperMacro+Output]
Models.PlattCalibrator	Apply a Platt calibrator to an input model	Microsoft.ML.Runtime.Internal.Calibration.Calibrate	Platt	Microsoft.ML.Runtime.Internal.Calibration.Calibrate+NoArgumentsInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CalibratorOutput
Models.QuantileRegressionEvaluator	Evaluates a quantile regression scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	QuantileRegression	Microsoft.ML.Runtime.Data.QuantileRegressionMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CommonEvaluateOutput
Models.RankerEvaluator	Evaluates a ranking scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	Ranking	Microsoft.ML.Runtime.Data.RankerMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CommonEvaluateOutput
Models.RegressionEnsemble	Combine regression models into an ensemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator	CreateRegressionEnsemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator+RegressionInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Models.RegressionEvaluator	Evaluates a regression scored dataset.	Microsoft.ML.Runtime.Data.Evaluate	Regression	Microsoft.ML.Runtime.Data.RegressionMamlEvaluator+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+CommonEvaluateOutput
Models.RegressionPipelineEnsemble	Combine regression models into an ensemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator	CreateRegressionPipelineEnsemble	Microsoft.ML.Runtime.EntryPoints.EnsembleCreator+PipelineRegressionInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Models.Summarizer	Summarize a linear regression predictor.	Microsoft.ML.Runtime.EntryPoints.SummarizePredictor	Summarize	Microsoft.ML.Runtime.EntryPoints.SummarizePredictor+Input	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+SummaryOutput
Models.SweepResultExtractor	Extracts the sweep result.	Microsoft.ML.Runtime.EntryPoints.PipelineSweeperMacro	ExtractSweepResult	Microsoft.ML.Runtime.EntryPoints.PipelineSweeperMacro+ResultInput	Microsoft.ML.Runtime.EntryPoints.PipelineSweeperMacro+Output
Models.TrainTestBinaryEvaluator	Train test for binary classification	Microsoft.ML.Runtime.EntryPoints.TrainTestBinaryMacro	TrainTestBinary	Microsoft.ML.Runtime.EntryPoints.TrainTestBinaryMacro+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput`1[Microsoft.ML.Runtime.EntryPoints.TrainTestBinaryMacro+Output]
Models.TrainTestEvaluator	General train test for any supported evaluator	Microsoft.ML.Runtime.EntryPoints.TrainTestMacro	TrainTest	Microsoft.ML.Runtime.EntryPoints.TrainTestMacro+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput`1[Microsoft.ML.Runtime.EntryPoints.TrainTestMacro+Output]
Trainers.AveragedPerceptronBinaryClassifier	Perceptron is a classification algorithm that makes its predictions based on a linear function.I.e., for an instance with feature values f0, f1,..., f_D-1, , the prediction is given by the sign of sigma[0,D-1] ( w_i * f_i), where w_0, w_1,...,w_D-1 are the weights computed by the algorithm.Perceptron is an online algorithm, i.e., it processes the instances in the training set one at a time.The weights are initialized to be 0, or some random values. Then, for each example in the training set, the value of sigma[0, D-1] (w_i * f_i) is computed. If this value has the same sign as the label of the current example, the weights remain the same. If they have opposite signs,the weights vector is updated by either subtracting or adding (if the label is negative or positive, respectively) the feature vector of the current example,multiplied by a factor 0 < a <= 1, called the learning rate. In a generalization of this algorithm, the weights are updated by adding the feature vector multiplied by the learning rate, and by the gradient of some loss function (in the specific case described above, the loss is hinge-loss, whose gradient is 1 when it is non-zero).In Averaged Perceptron (AKA voted-perceptron), the weight vectors are stored, together with a weight that counts the number of iterations it survived (this is equivalent to storing the weight vector after every iteration, regardless of whether it was updated or not).The prediction is then calculated by taking the weighted average of all the sums sigma[0, D-1] (w_i * f_i) or the different weight vectors.	Microsoft.ML.Runtime.Learners.AveragedPerceptronTrainer	TrainBinary	Microsoft.ML.Runtime.Learners.AveragedPerceptronTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.EnsembleBinaryClassifier	Train binary ensemble.	Microsoft.ML.Ensemble.EntryPoints.Ensemble	CreateBinaryEnsemble	Microsoft.ML.Runtime.Ensemble.EnsembleTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.EnsembleClassification	Train multiclass ensemble.	Microsoft.ML.Ensemble.EntryPoints.Ensemble	CreateMultiClassEnsemble	Microsoft.ML.Runtime.Ensemble.MulticlassDataPartitionEnsembleTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MulticlassClassificationOutput
Trainers.EnsembleRegression	Train regression ensemble.	Microsoft.ML.Ensemble.EntryPoints.Ensemble	CreateRegressionEnsemble	Microsoft.ML.Runtime.Ensemble.RegressionEnsembleTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.FastForestBinaryClassifier	Uses a random forest learner to perform binary classification.	Microsoft.ML.Runtime.FastTree.FastForest	TrainBinary	Microsoft.ML.Runtime.FastTree.FastForestClassification+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.FastForestRegressor	Trains a random forest to fit target values using least-squares.	Microsoft.ML.Runtime.FastTree.FastForest	TrainRegression	Microsoft.ML.Runtime.FastTree.FastForestRegression+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.FastTreeBinaryClassifier	Uses a logit-boost boosted tree learner to perform binary classification.	Microsoft.ML.Runtime.FastTree.FastTree	TrainBinary	Microsoft.ML.Runtime.FastTree.FastTreeBinaryClassificationTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.FastTreeRanker	Trains gradient boosted decision trees to the LambdaRank quasi-gradient.	Microsoft.ML.Runtime.FastTree.FastTree	TrainRanking	Microsoft.ML.Runtime.FastTree.FastTreeRankingTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RankingOutput
Trainers.FastTreeRegressor	Trains gradient boosted decision trees to fit target values using least-squares.	Microsoft.ML.Runtime.FastTree.FastTree	TrainRegression	Microsoft.ML.Runtime.FastTree.FastTreeRegressionTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.FastTreeTweedieRegressor	Trains gradient boosted decision trees to fit target values using a Tweedie loss function. This learner is a generalization of Poisson, compound Poisson, and gamma regression.	Microsoft.ML.Runtime.FastTree.FastTree	TrainTweedieRegression	Microsoft.ML.Runtime.FastTree.FastTreeTweedieTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.FieldAwareFactorizationMachineBinaryClassifier	Train a field-aware factorization machine for binary classification	Microsoft.ML.Runtime.FactorizationMachine.FieldAwareFactorizationMachineTrainer	TrainBinary	Microsoft.ML.Runtime.FactorizationMachine.FieldAwareFactorizationMachineTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.GeneralizedAdditiveModelBinaryClassifier	Trains a gradient boosted stump per feature, on all features simultaneously, to fit target values using least-squares. It mantains no interactions between features.	Microsoft.ML.Runtime.FastTree.Gam	TrainBinary	Microsoft.ML.Runtime.FastTree.BinaryClassificationGamTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.GeneralizedAdditiveModelRegressor	Trains a gradient boosted stump per feature, on all features simultaneously, to fit target values using least-squares. It mantains no interactions between features.	Microsoft.ML.Runtime.FastTree.Gam	TrainRegression	Microsoft.ML.Runtime.FastTree.RegressionGamTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.KMeansPlusPlusClusterer	K-means is a popular clustering algorithm. With K-means, the data is clustered into a specified number of clusters in order to minimize the within-cluster sum of squares. K-means++ improves upon K-means by using a better method for choosing the initial cluster centers.	Microsoft.ML.Runtime.KMeans.KMeansPlusPlusTrainer	TrainKMeans	Microsoft.ML.Runtime.KMeans.KMeansPlusPlusTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+ClusteringOutput
Trainers.LightGbmBinaryClassifier	Train a LightGBM binary class model.	Microsoft.ML.Runtime.LightGBM.LightGbm	TrainBinary	Microsoft.ML.Runtime.LightGBM.LightGbmArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.LightGbmClassifier	Train a LightGBM multi class model.	Microsoft.ML.Runtime.LightGBM.LightGbm	TrainMultiClass	Microsoft.ML.Runtime.LightGBM.LightGbmArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MulticlassClassificationOutput
Trainers.LightGbmRanker	Train a LightGBM ranking model.	Microsoft.ML.Runtime.LightGBM.LightGbm	TrainRanking	Microsoft.ML.Runtime.LightGBM.LightGbmArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RankingOutput
Trainers.LightGbmRegressor	LightGBM Regression	Microsoft.ML.Runtime.LightGBM.LightGbm	TrainRegression	Microsoft.ML.Runtime.LightGBM.LightGbmArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.LinearSvmBinaryClassifier	Train a linear SVM.	Microsoft.ML.Runtime.Learners.LinearSvm	TrainLinearSvm	Microsoft.ML.Runtime.Learners.LinearSvm+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.LogisticRegressionBinaryClassifier	Logistic Regression is a classification method used to predict the value of a categorical dependent variable from its relationship to one or more independent variables assumed to have a logistic distribution. If the dependent variable has only two possible values (success/failure), then the logistic regression is binary. If the dependent variable has more than two possible values (blood type given diagnostic test results), then the logistic regression is multinomial.The optimization technique used for LogisticRegressionBinaryClassifier is the limited memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS). Both the L-BFGS and regular BFGS algorithms use quasi-Newtonian methods to estimate the computationally intensive Hessian matrix in the equation used by Newton's method to calculate steps. But the L-BFGS approximation uses only a limited amount of memory to compute the next step direction, so that it is especially suited for problems with a large number of variables. The memory_size parameter specifies the number of past positions and gradients to store for use in the computation of the next step.This learner can use elastic net regularization: a linear combination of L1 (lasso) and L2 (ridge) regularizations. Regularization is a method that can render an ill-posed problem more tractable by imposing constraints that provide information to supplement the data and that prevents overfitting by penalizing models with extreme coefficient values. This can improve the generalization of the model learned by selecting the optimal complexity in the bias-variance tradeoff. Regularization works by adding the penalty that is associated with coefficient values to the error of the hypothesis. An accurate model with extreme coefficient values would be penalized more, but a less accurate model with more conservative values would be penalized less. L1 and L2 regularization have different effects and uses that are complementary in certain respects.l1_weight: can be applied to sparse models, when working with high-dimensional data. It pulls small weights associated features that are relatively unimportant towards 0. l2_weight: is preferable for data that is not sparse. It pulls large weights towards zero. Adding the ridge penalty to the regularization overcomes some of lasso's limitations. It can improve its predictive accuracy, for example, when the number of predictors is greater than the sample size. If x = l1_weight and y = l2_weight, ax + by = c defines the linear span of the regularization terms. The default values of x and y are both 1. An agressive regularization can harm predictive capacity by excluding important variables out of the model. So choosing the optimal values for the regularization parameters is important for the performance of the logistic regression model.<see href='http://en.wikipedia.org/wiki/L-BFGS'>Wikipedia: L-BFGS</see>.<see href='http://en.wikipedia.org/wiki/Logistic_regression'>Wikipedia: Logistic regression</see>.<see href='http://research.microsoft.com/apps/pubs/default.aspx?id=78900'>Scalable Training of L1-Regularized Log-Linear Models</see>.<see href='https://msdn.microsoft.com/en-us/magazine/dn904675.aspx'>Test Run - L1 and L2 Regularization for Machine Learning</see>.	Microsoft.ML.Runtime.Learners.LogisticRegression	TrainBinary	Microsoft.ML.Runtime.Learners.LogisticRegression+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.LogisticRegressionClassifier	Logistic Regression is a classification method used to predict the value of a categorical dependent variable from its relationship to one or more independent variables assumed to have a logistic distribution. If the dependent variable has only two possible values (success/failure), then the logistic regression is binary. If the dependent variable has more than two possible values (blood type given diagnostic test results), then the logistic regression is multinomial.The optimization technique used for LogisticRegressionBinaryClassifier is the limited memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS). Both the L-BFGS and regular BFGS algorithms use quasi-Newtonian methods to estimate the computationally intensive Hessian matrix in the equation used by Newton's method to calculate steps. But the L-BFGS approximation uses only a limited amount of memory to compute the next step direction, so that it is especially suited for problems with a large number of variables. The memory_size parameter specifies the number of past positions and gradients to store for use in the computation of the next step.This learner can use elastic net regularization: a linear combination of L1 (lasso) and L2 (ridge) regularizations. Regularization is a method that can render an ill-posed problem more tractable by imposing constraints that provide information to supplement the data and that prevents overfitting by penalizing models with extreme coefficient values. This can improve the generalization of the model learned by selecting the optimal complexity in the bias-variance tradeoff. Regularization works by adding the penalty that is associated with coefficient values to the error of the hypothesis. An accurate model with extreme coefficient values would be penalized more, but a less accurate model with more conservative values would be penalized less. L1 and L2 regularization have different effects and uses that are complementary in certain respects.l1_weight: can be applied to sparse models, when working with high-dimensional data. It pulls small weights associated features that are relatively unimportant towards 0. l2_weight: is preferable for data that is not sparse. It pulls large weights towards zero. Adding the ridge penalty to the regularization overcomes some of lasso's limitations. It can improve its predictive accuracy, for example, when the number of predictors is greater than the sample size. If x = l1_weight and y = l2_weight, ax + by = c defines the linear span of the regularization terms. The default values of x and y are both 1. An agressive regularization can harm predictive capacity by excluding important variables out of the model. So choosing the optimal values for the regularization parameters is important for the performance of the logistic regression model.<see href='http://en.wikipedia.org/wiki/L-BFGS'>Wikipedia: L-BFGS</see>.<see href='http://en.wikipedia.org/wiki/Logistic_regression'>Wikipedia: Logistic regression</see>.<see href='http://research.microsoft.com/apps/pubs/default.aspx?id=78900'>Scalable Training of L1-Regularized Log-Linear Models</see>.<see href='https://msdn.microsoft.com/en-us/magazine/dn904675.aspx'>Test Run - L1 and L2 Regularization for Machine Learning</see>.	Microsoft.ML.Runtime.Learners.LogisticRegression	TrainMultiClass	Microsoft.ML.Runtime.Learners.MulticlassLogisticRegression+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MulticlassClassificationOutput
Trainers.NaiveBayesClassifier	Train a MultiClassNaiveBayesTrainer.	Microsoft.ML.Runtime.Learners.MultiClassNaiveBayesTrainer	TrainMultiClassNaiveBayesTrainer	Microsoft.ML.Runtime.Learners.MultiClassNaiveBayesTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MulticlassClassificationOutput
Trainers.OnlineGradientDescentRegressor	Train a Online gradient descent perceptron.	Microsoft.ML.Runtime.Learners.OnlineGradientDescentTrainer	TrainRegression	Microsoft.ML.Runtime.Learners.OnlineGradientDescentTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.PcaAnomalyDetector	Train an PCA Anomaly model.	Microsoft.ML.Runtime.PCA.RandomizedPcaTrainer	TrainPcaAnomaly	Microsoft.ML.Runtime.PCA.RandomizedPcaTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+AnomalyDetectionOutput
Trainers.PoissonRegressor	Train an Poisson regression model.	Microsoft.ML.Runtime.Learners.PoissonRegression	TrainRegression	Microsoft.ML.Runtime.Learners.PoissonRegression+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.StochasticDualCoordinateAscentBinaryClassifier	Train an SDCA binary model.	Microsoft.ML.Runtime.Learners.Sdca	TrainBinary	Microsoft.ML.Runtime.Learners.LinearClassificationTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Trainers.StochasticDualCoordinateAscentClassifier	This classifier is a trainer based on the Stochastic DualCoordinate Ascent(SDCA) method, a state-of-the-art optimization technique for convex objective functions.The algorithm can be scaled for use on large out-of-memory data sets due to a semi-asynchronized implementation that supports multi-threading.Convergence is underwritten by periodically enforcing synchronization between primal and dual updates in a separate thread.Several choices of loss functions are also provided.The SDCA method combines several of the best properties and capabilities of logistic regression and SVM algorithms.For more information on SDCA, see:<see href='https://www.microsoft.com/en-us/research/wp-content/uploads/2016/06/main-3.pdf'>Scaling Up Stochastic Dual Coordinate Ascent</see>.<see href='http://www.jmlr.org/papers/volume14/shalev-shwartz13a/shalev-shwartz13a.pdf'>Stochastic Dual Coordinate Ascent Methods for Regularized Loss Minimization</see>.Note that SDCA is a stochastic and streaming optimization algorithm. The results depends on the order of the training data. For reproducible results, it is recommended that one sets `shuffle` to`False` and `NumThreads` to `1`.Elastic net regularization can be specified by the l2_weight and l1_weight parameters. Note that the l2_weight has an effect on the rate of convergence. In general, the larger the l2_weight, the faster SDCA converges.	Microsoft.ML.Runtime.Learners.Sdca	TrainMultiClass	Microsoft.ML.Runtime.Learners.SdcaMultiClassTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MulticlassClassificationOutput
Trainers.StochasticDualCoordinateAscentRegressor	This classifier is a trainer based on the Stochastic DualCoordinate Ascent(SDCA) method, a state-of-the-art optimization technique for convex objective functions.The algorithm can be scaled for use on large out-of-memory data sets due to a semi-asynchronized implementation that supports multi-threading.Convergence is underwritten by periodically enforcing synchronization between primal and dual updates in a separate thread.Several choices of loss functions are also provided.The SDCA method combines several of the best properties and capabilities of logistic regression and SVM algorithms.For more information on SDCA, see:<see href='https://www.microsoft.com/en-us/research/wp-content/uploads/2016/06/main-3.pdf'>Scaling Up Stochastic Dual Coordinate Ascent</see>.<see href='http://www.jmlr.org/papers/volume14/shalev-shwartz13a/shalev-shwartz13a.pdf'>Stochastic Dual Coordinate Ascent Methods for Regularized Loss Minimization</see>.Note that SDCA is a stochastic and streaming optimization algorithm. The results depends on the order of the training data. For reproducible results, it is recommended that one sets `shuffle` to`False` and `NumThreads` to `1`.Elastic net regularization can be specified by the l2_weight and l1_weight parameters. Note that the l2_weight has an effect on the rate of convergence. In general, the larger the l2_weight, the faster SDCA converges.	Microsoft.ML.Runtime.Learners.Sdca	TrainRegression	Microsoft.ML.Runtime.Learners.SdcaRegressionTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+RegressionOutput
Trainers.StochasticGradientDescentBinaryClassifier	Train an Hogwild SGD binary model.	Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer	TrainBinary	Microsoft.ML.Runtime.Learners.StochasticGradientDescentClassificationTrainer+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+BinaryClassificationOutput
Transforms.ApproximateBootstrapSampler	Approximate bootstrap sampling.	Microsoft.ML.Runtime.Data.BootstrapSample	GetSample	Microsoft.ML.Runtime.Data.BootstrapSampleTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.BinaryPredictionScoreColumnsRenamer	For binary prediction, it renames the PredictedLabel and Score columns to include the name of the positive class.	Microsoft.ML.Runtime.EntryPoints.ScoreModel	RenameBinaryPredictionScoreColumns	Microsoft.ML.Runtime.EntryPoints.ScoreModel+RenameBinaryPredictionScoreColumnsInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.BinNormalizer	The values are assigned into equidensity bins and a value is mapped to its bin_number/number_of_bins.	Microsoft.ML.Runtime.Data.Normalize	Bin	Microsoft.ML.Runtime.Data.NormalizeTransform+BinArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.CategoricalHashOneHotVectorizer	Encodes the categorical variable with hash-based encoding	Microsoft.ML.Runtime.Data.Categorical	CatTransformHash	Microsoft.ML.Runtime.Data.CategoricalHashTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.CategoricalOneHotVectorizer	Encodes the categorical variable with one-hot encoding based on term dictionary	Microsoft.ML.Runtime.Data.Categorical	CatTransformDict	Microsoft.ML.Runtime.Data.CategoricalTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.CharacterTokenizer	Character-oriented tokenizer where text is considered a sequence of characters.	Microsoft.ML.Runtime.Transforms.TextAnalytics	CharTokenize	Microsoft.ML.Runtime.TextAnalytics.CharTokenizeTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ColumnConcatenator	Concatenates two columns of the same item type.	Microsoft.ML.Runtime.EntryPoints.SchemaManipulation	ConcatColumns	Microsoft.ML.Runtime.Data.ConcatTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ColumnCopier	Duplicates columns from the dataset	Microsoft.ML.Runtime.EntryPoints.SchemaManipulation	CopyColumns	Microsoft.ML.Runtime.Data.CopyColumnsTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ColumnDropper	Drops columns from the dataset	Microsoft.ML.Runtime.EntryPoints.SchemaManipulation	DropColumns	Microsoft.ML.Runtime.Data.DropColumnsTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ColumnSelector	Selects a set of columns, dropping all others	Microsoft.ML.Runtime.EntryPoints.SchemaManipulation	SelectColumns	Microsoft.ML.Runtime.Data.DropColumnsTransform+KeepArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ColumnTypeConverter	Converts a column to a different type, using standard conversions.	Microsoft.ML.Runtime.Data.TypeConversion	Convert	Microsoft.ML.Runtime.Data.ConvertTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.CombinerByContiguousGroupId	Groups values of a scalar column into a vector, by a contiguous group ID	Microsoft.ML.Runtime.Data.GroupingOperations	Group	Microsoft.ML.Runtime.Data.GroupTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ConditionalNormalizer	Normalize the columns only if needed	Microsoft.ML.Runtime.Data.Normalize	IfNeeded	Microsoft.ML.Runtime.Data.NormalizeTransform+MinMaxArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+MacroOutput`1[Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput]
Transforms.DataCache	Caches using the specified cache option.	Microsoft.ML.Runtime.EntryPoints.Cache	CacheData	Microsoft.ML.Runtime.EntryPoints.Cache+CacheInput	Microsoft.ML.Runtime.EntryPoints.Cache+CacheOutput
Transforms.DatasetScorer	Score a dataset with a predictor model	Microsoft.ML.Runtime.EntryPoints.ScoreModel	Score	Microsoft.ML.Runtime.EntryPoints.ScoreModel+Input	Microsoft.ML.Runtime.EntryPoints.ScoreModel+Output
Transforms.DatasetTransformScorer	Score a dataset with a transform model	Microsoft.ML.Runtime.EntryPoints.ScoreModel	ScoreUsingTransform	Microsoft.ML.Runtime.EntryPoints.ScoreModel+InputTransformScorer	Microsoft.ML.Runtime.EntryPoints.ScoreModel+Output
Transforms.Dictionarizer	Converts input values (words, numbers, etc.) to index in a dictionary.	Microsoft.ML.Runtime.Transforms.TextAnalytics	TermTransform	Microsoft.ML.Runtime.Data.TermTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.FeatureCombiner	Combines all the features into one feature column.	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner	PrepareFeatures	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner+FeatureCombinerInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.FeatureSelectorByCount	Selects the slots for which the count of non-default values is greater than or equal to a threshold.	Microsoft.ML.Runtime.EntryPoints.SelectFeatures	CountSelect	Microsoft.ML.Runtime.Data.CountFeatureSelectionTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.FeatureSelectorByMutualInformation	Selects the top k slots across all specified columns ordered by their mutual information with the label column.	Microsoft.ML.Runtime.EntryPoints.SelectFeatures	MutualInformationSelect	Microsoft.ML.Runtime.Data.MutualInformationFeatureSelectionTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.GlobalContrastNormalizer	Performs a global contrast normalization on input values: Y = (s * X - M) / D, where s is a scale, M is mean and D is either L2 norm or standard deviation.	Microsoft.ML.Runtime.Data.LpNormalization	GcNormalize	Microsoft.ML.Runtime.Data.LpNormNormalizerTransform+GcnArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.HashConverter	Converts column values into hashes. This transform accepts both numeric and text inputs, both single and vector-valued columns. This is a part of the Dracula transform.	Microsoft.ML.Runtime.Data.HashJoin	Apply	Microsoft.ML.Runtime.Data.HashJoinTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.KeyToTextConverter	KeyToValueTransform utilizes KeyValues metadata to map key indices to the corresponding values in the KeyValues metadata.	Microsoft.ML.Runtime.Data.Categorical	KeyToText	Microsoft.ML.Runtime.Data.KeyToValueTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.LabelColumnKeyBooleanConverter	Transforms the label to either key or bool (if needed) to make it suitable for classification.	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner	PrepareClassificationLabel	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner+ClassificationLabelInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.LabelIndicator	Label remapper used by OVA	Microsoft.ML.Runtime.Data.LabelIndicatorTransform	LabelIndicator	Microsoft.ML.Runtime.Data.LabelIndicatorTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.LabelToFloatConverter	Transforms the label to float to make it suitable for regression.	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner	PrepareRegressionLabel	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner+RegressionLabelInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.LightLda	The LDA transform implements LightLDA, a state-of-the-art implementation of Latent Dirichlet Allocation.	Microsoft.ML.Runtime.Transforms.TextAnalytics	LightLda	Microsoft.ML.Runtime.TextAnalytics.LdaTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.LogMeanVarianceNormalizer	Normalizes the data based on the computed mean and variance of the logarithm of the data.	Microsoft.ML.Runtime.Data.Normalize	LogMeanVar	Microsoft.ML.Runtime.Data.NormalizeTransform+LogMeanVarArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.LpNormalizer	Normalize vectors (rows) individually by rescaling them to unit norm (L2, L1 or LInf). Performs the following operation on a vector X: Y = (X - M) / D, where M is mean and D is either L2 norm, L1 norm or LInf norm.	Microsoft.ML.Runtime.Data.LpNormalization	Normalize	Microsoft.ML.Runtime.Data.LpNormNormalizerTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ManyHeterogeneousModelCombiner	Combines a sequence of TransformModels and a PredictorModel into a single PredictorModel.	Microsoft.ML.Runtime.EntryPoints.ModelOperations	CombineModels	Microsoft.ML.Runtime.EntryPoints.ModelOperations+PredictorModelInput	Microsoft.ML.Runtime.EntryPoints.ModelOperations+PredictorModelOutput
Transforms.MeanVarianceNormalizer	Normalizes the data based on the computed mean and variance of the data.	Microsoft.ML.Runtime.Data.Normalize	MeanVar	Microsoft.ML.Runtime.Data.NormalizeTransform+MeanVarArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.MinMaxNormalizer	Normalizes the data based on the observed minimum and maximum values of the data.	Microsoft.ML.Runtime.Data.Normalize	MinMax	Microsoft.ML.Runtime.Data.NormalizeTransform+MinMaxArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.MissingValueHandler	Handle missing values by replacing them with either the default value or the mean/min/max value (for non-text columns only). An indicator column can optionally be concatenated, if theinput column type is numeric.	Microsoft.ML.Runtime.Data.NAHandling	Handle	Microsoft.ML.Runtime.Data.NAHandleTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.MissingValueIndicator	Create a boolean output column with the same number of slots as the input column, where the output value is true if the value in the input column is missing.	Microsoft.ML.Runtime.Data.NAHandling	Indicator	Microsoft.ML.Runtime.Data.NAIndicatorTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.MissingValuesDropper	Removes NAs from vector columns.	Microsoft.ML.Runtime.Data.NAHandling	Drop	Microsoft.ML.Runtime.Data.NADropTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.MissingValuesRowDropper	Filters out rows that contain missing values.	Microsoft.ML.Runtime.Data.NAHandling	Filter	Microsoft.ML.Runtime.Data.NAFilter+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.MissingValueSubstitutor	Create an output column of the same type and size of the input column, where missing values are replaced with either the default value or the mean/min/max value (for non-text columns only).	Microsoft.ML.Runtime.Data.NAHandling	Replace	Microsoft.ML.Runtime.Data.NAReplaceTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ModelCombiner	Combines a sequence of TransformModels into a single model	Microsoft.ML.Runtime.EntryPoints.ModelOperations	CombineTransformModels	Microsoft.ML.Runtime.EntryPoints.ModelOperations+CombineTransformModelsInput	Microsoft.ML.Runtime.EntryPoints.ModelOperations+CombineTransformModelsOutput
Transforms.NGramTranslator	Produces a bag of counts of ngrams (sequences of consecutive values of length 1-n) in a given vector of keys. It does so by building a dictionary of ngrams and using the id in the dictionary as the index in the bag.	Microsoft.ML.Runtime.Transforms.TextAnalytics	NGramTransform	Microsoft.ML.Runtime.Data.NgramTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.NoOperation	Does nothing.	Microsoft.ML.Runtime.Data.NopTransform	Nop	Microsoft.ML.Runtime.Data.NopTransform+NopInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.OptionalColumnCreator	If the source column does not exist after deserialization, create a column with the right type and default values.	Microsoft.ML.Runtime.DataPipe.OptionalColumnTransform	MakeOptional	Microsoft.ML.Runtime.DataPipe.OptionalColumnTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.PcaCalculator	Train an PCA Anomaly model.	Microsoft.ML.Runtime.Data.PcaTransform	Calculate	Microsoft.ML.Runtime.Data.PcaTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.PredictedLabelColumnOriginalValueConverter	Transforms a predicted label column to its original values, unless it is of type bool.	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner	ConvertPredictedLabel	Microsoft.ML.Runtime.EntryPoints.FeatureCombiner+PredictedLabelInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.RandomNumberGenerator	Adds a column with a generated number sequence.	Microsoft.ML.Runtime.Data.RandomNumberGenerator	Generate	Microsoft.ML.Runtime.Data.GenerateNumberTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.RowRangeFilter	Filters a dataview on a column of type Single, Double or Key (contiguous). Keeps the values that are in the specified min/max range. NaNs are always filtered out. If the input is a Key type, the min/max are considered percentages of the number of values.	Microsoft.ML.Runtime.EntryPoints.SelectRows	FilterByRange	Microsoft.ML.Runtime.Data.RangeFilter+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.RowSkipAndTakeFilter	Allows limiting input to a subset of rows at an optional offset.  Can be used to implement data paging.	Microsoft.ML.Runtime.EntryPoints.SelectRows	SkipAndTakeFilter	Microsoft.ML.Runtime.Data.SkipTakeFilter+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.RowSkipFilter	Allows limiting input to a subset of rows by skipping a number of rows.	Microsoft.ML.Runtime.EntryPoints.SelectRows	SkipFilter	Microsoft.ML.Runtime.Data.SkipTakeFilter+SkipArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.RowTakeFilter	Allows limiting input to a subset of rows by taking N first rows.	Microsoft.ML.Runtime.EntryPoints.SelectRows	TakeFilter	Microsoft.ML.Runtime.Data.SkipTakeFilter+TakeArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.ScoreColumnSelector	Selects only the last score columns and the extra columns specified in the arguments.	Microsoft.ML.Runtime.EntryPoints.ScoreModel	SelectColumns	Microsoft.ML.Runtime.EntryPoints.ScoreModel+ScoreColumnSelectorInput	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.Scorer	Turn the predictor model into a transform model	Microsoft.ML.Runtime.EntryPoints.ScoreModel	MakeScoringTransform	Microsoft.ML.Runtime.EntryPoints.ScoreModel+ModelInput	Microsoft.ML.Runtime.EntryPoints.ScoreModel+Output
Transforms.Segregator	Un-groups vector columns into sequences of rows, inverse of Group transform	Microsoft.ML.Runtime.Data.GroupingOperations	Ungroup	Microsoft.ML.Runtime.Data.UngroupTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.SentimentAnalyzer	Uses a pretrained sentiment model to score input strings	Microsoft.ML.Runtime.Transforms.TextAnalytics	AnalyzeSentiment	Microsoft.ML.Runtime.TextAnalytics.SentimentAnalyzingTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.SupervisedBinNormalizer	Similar to BinNormalizer, but calculates bins based on correlation with the label column, not equi-density. The new value is bin_number / number_of_bins.	Microsoft.ML.Runtime.Data.Normalize	SupervisedBin	Microsoft.ML.Runtime.Data.NormalizeTransform+SupervisedBinArguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.TextFeaturizer	A transform that turns a collection of text documents into numerical feature vectors. The feature vectors are normalized counts of (word and/or character) ngrams in a given tokenized text.	Microsoft.ML.Runtime.Transforms.TextAnalytics	TextTransform	Microsoft.ML.Runtime.Data.TextTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.TextToKeyConverter	Converts input values (words, numbers, etc.) to index in a dictionary.	Microsoft.ML.Runtime.Data.Categorical	TextToKey	Microsoft.ML.Runtime.Data.TermTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.TrainTestDatasetSplitter	Split the dataset into train and test sets	Microsoft.ML.Runtime.EntryPoints.TrainTestSplit	Split	Microsoft.ML.Runtime.EntryPoints.TrainTestSplit+Input	Microsoft.ML.Runtime.EntryPoints.TrainTestSplit+Output
Transforms.TreeLeafFeaturizer	Trains a tree ensemble, or loads it from a file, then maps a numeric feature vector to three outputs: 1. A vector containing the individual tree outputs of the tree ensemble. 2. A vector indicating the leaves that the feature vector falls on in the tree ensemble. 3. A vector indicating the paths that the feature vector falls on in the tree ensemble. If a both a model file and a trainer are specified - will use the model file. If neither are specified, will train a default FastTree model. This can handle key labels by training a regression model towards their optionally permuted indices.	Microsoft.ML.Runtime.Data.TreeFeaturize	Featurizer	Microsoft.ML.Runtime.Data.TreeEnsembleFeaturizerTransform+ArgumentsForEntryPoint	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
Transforms.TwoHeterogeneousModelCombiner	Combines a TransformModel and a PredictorModel into a single PredictorModel.	Microsoft.ML.Runtime.EntryPoints.ModelOperations	CombineTwoModels	Microsoft.ML.Runtime.EntryPoints.ModelOperations+SimplePredictorModelInput	Microsoft.ML.Runtime.EntryPoints.ModelOperations+PredictorModelOutput
Transforms.WordTokenizer	The input to this transform is text, and the output is a vector of text containing the words (tokens) in the original text. The separator is space, but can be specified as any other character (or multiple characters) if needed.	Microsoft.ML.Runtime.Transforms.TextAnalytics	DelimitedTokenizeTransform	Microsoft.ML.Runtime.Data.DelimitedTokenizeTransform+Arguments	Microsoft.ML.Runtime.EntryPoints.CommonOutputs+TransformOutput
