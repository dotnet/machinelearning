<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build">
  <PropertyGroup>
    <!-- versioning.targets will import this file, so don't import it again -->
    <DisableImportVersioningProps>true</DisableImportVersioningProps>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />

  <Import Project="build/ExternalBenchmarkDataFiles.props" />
  <Import Project="build/TensorflowMetaFiles.props" />
  <Import Project="$(ToolsDir)VersionTools.targets" Condition="Exists('$(ToolsDir)VersionTools.targets')" />
  <UsingTask TaskName="DownloadFilesFromUrl" AssemblyFile="$(ToolsDir)Microsoft.DotNet.Build.Tasks.dll"/>
  <PropertyGroup>
    <!-- To disable the restoration of packages, set RestoreDuringBuild=false or pass /p:RestoreDuringBuild=false.-->
    <RestoreDuringBuild Condition="'$(RestoreDuringBuild)'==''">true</RestoreDuringBuild>
  </PropertyGroup>

  <PropertyGroup>
    <!-- CreateOrUpdateCurrentVersionFile needs ProjectDir set to generate the SourceLink file -->
    <ProjectDir>$(RepoRoot)</ProjectDir>
  </PropertyGroup>

  <ItemGroup>
    <Project Include="Microsoft.ML.sln" />
  </ItemGroup>

  <Import Project="dir.traversal.targets" />

  <Import Project="$(ToolsDir)clean.targets" />

  <PropertyGroup>
    <TraversalBuildDependsOn>
      CreateOrUpdateCurrentVersionFile;
      RestoreProjects;
      BuildRedist;
      BuildNative;
      $(TraversalBuildDependsOn);
      DownloadExternalTestFiles;
      DownloadTensorflowMetaFiles;
    </TraversalBuildDependsOn>
  </PropertyGroup>

  <Target Name="RestoreProjects" Condition="'$(RestoreDuringBuild)'=='true'">
    <Message Importance="High" Text="Restoring all projects..." />
    <MSBuild Projects="@(Project)"
             Targets="Restore" 
             Properties="MSBuildWarningsAsMessages=NU1503;RestoreDisableParallel=true" />
  </Target>

  <Target Name="BuildRedist"
          Condition="'$(SkipRedistBuild)' != 'true'"
          DependsOnTargets="RestoreProjects">
    <Message Importance="High" Text="Building redist components..." />
    <MSBuild Projects="src/Redist/build.proj"
             Targets="Build" />
  </Target>

  <Target Name="BuildNative"
          Condition="'$(SkipNativeBuild)' != 'true'"
          DependsOnTargets="RestoreProjects;BuildRedist">
    <Message Importance="High" Text="Building native components..." />
    <MSBuild Projects="src/Native/build.proj"
             Targets="Build" />
  </Target>

  <Target Name="BuildPackages"
          DependsOnTargets="CreateOrUpdateCurrentVersionFile;RestoreProjects">
    <Message Importance="High" Text="Building packages ..." />

    <ItemGroup>
      <PkgProject Include="pkg\**\*.nupkgproj" />
    </ItemGroup>

    <MSBuild Projects="@(PkgProject)"
             Targets="Restore" />
    <MSBuild Projects="@(PkgProject)"
             Targets="Pack" />
  </Target>
  
  <ItemGroup Condition="'$(IncludeBenchmarkData)' == 'true'">
    <BenchmarkFile Update="@(BenchmarkFile)">
      <Url>https://aka.ms/mlnet-resources/benchmarks/%(Identity)</Url>
      <DestinationFile>$(MSBuildThisFileDirectory)/test/data/external/%(Identity)</DestinationFile>
    </BenchmarkFile>

    <TestFile Include="@(BenchmarkFile->'$(MSBuildThisFileDirectory)/test/data/external/%(Identity)')" />
  </ItemGroup>

  <Target Name="DownloadExternalTestFiles" Inputs="@(TestFile)" Outputs="%(TestFile.DestinationFile)">
    <Message Importance="High" Text="Downloading external test files... %(TestFile.DestinationFile)" />
    <DownloadFile
            SourceUrl="%(BenchmarkFile.Url)"
            DestinationFolder="$(MSBuildThisFileDirectory)/test/data/external/"
            Retries="5"
            SkipUnchangedFiles="true">
    </DownloadFile>
  </Target>

  <ItemGroup>
    <MetaFile Update="@(MetaFile)">
      <Url>https://aka.ms/mlnet-resources/%(Identity)</Url>
      <DestinationFile>$([System.IO.Path]::GetTempPath())/MLNET/</DestinationFile>
    </MetaFile>

    <TensorflowMetaFile Include="@(MetaFile->'$([System.IO.Path]::GetTempPath())/MLNET/%(Identity)')" />
  </ItemGroup>

  <Target Name="DownloadTensorflowMetaFiles" Inputs="@(TensorflowMetaFile)" Outputs="%(TensorflowMetaFile.DestinationFile)">
    <Message Importance="High" Text="Downloading tensorflow meta files... %(TensorflowMetaFile.DestinationFile)" />
    <DownloadFile
            SourceUrl="%(MetaFile.Url)"
            DestinationFolder="$([System.IO.Path]::GetTempPath())/MLNET/"
            Retries="5"
            SkipUnchangedFiles="true">
    </DownloadFile>
  </Target>

  <Target Name="RunTests">
    <MSBuild Projects="test\run-tests.proj"
             Targets="RunTests" />
  </Target>

  <Target Name="RunCITests">
    <MSBuild Projects="test\run-tests.proj"
             Targets="RunCITests" />
  </Target>

  <Target Name="RunSpecificTests">
    <MSBuild Projects="test\run-tests.proj"
             Targets="RunSpecificTests" />
  </Target>

  <Target Name="RunNightlyBuildTests">
    <MSBuild Projects="test\run-night-build-tests.proj"
             Targets="RunNightlyBuildTests" />
  </Target>

  <!-- Override CleanAllProjects from dir.traversal.targets and just remove the full BinDir -->
  <Target Name="CleanAllProjects">
    <RemoveDir Directories="$(BinDir)" />
  </Target>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />

</Project>
