<Project>

  <PropertyGroup>
    <PackageAssetsPath>$(ArtifactsDir)pkgassets/</PackageAssetsPath>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <IsSymbolsPackage Condition="$(MSBuildProjectName.Contains('.snupkg'))">true</IsSymbolsPackage>
    <PackageIdFolderName>$(MSBuildProjectName.Replace('.symbols', ''))</PackageIdFolderName>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <IsPackable>true</IsPackable>

  </PropertyGroup>

  <!-- nuspec properties -->
  <PropertyGroup>
    <Authors>Microsoft</Authors>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://dot.net/ml</PackageProjectUrl>
    <PackageIcon>mlnetlogo.png</PackageIcon>
    <PackageReleaseNotes>https://aka.ms/mlnetreleasenotes</PackageReleaseNotes>
    <!-- space separated -->
    <PackageTags>ML.NET ML Machine Learning</PackageTags>

    <LibExtension Condition="'$(OS)' == 'Windows_NT'">.dll</LibExtension>
		<LibExtension Condition="'$(OS)' != 'Windows_NT'">.so</LibExtension>
		<LibExtension Condition="$([MSBuild]::IsOSPlatform('osx'))">.dylib</LibExtension>
  </PropertyGroup>

  <ItemGroup>

    <!-- Create symbol packages correctly by copying the library and xml to the nuget. Then the pdb is auto put in the symbols package-->
    <Content Include="$(PackageAssetsPath)$(PackageIdFolderName)\lib\**\*" PackagePath="lib" />
    <Content Include="$(PackageAssetsPath)$(PackageIdFolderName)\analyzers\**\*" PackagePath="analyzers" />
    <Content Include="$(PackageAssetsPath)$(PackageIdFolderName)\runtimes\**\*" PackagePath="runtimes" />
    <Content Include="$(PackageAssetsPath)$(PackageIdFolderName)\tools\**\*" PackagePath="tools" />

    <Content Include="$(RepoRoot)eng\pkg\mlnetlogo.png" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup Condition="'$(IncludeMLNetNotices)' != 'false'">
    <Content Include="$(RepoRoot)\THIRD-PARTY-NOTICES.TXT" Pack="true" PackagePath="" />
    <Content Include="$(RepoRoot)\LICENSE" Pack="true" PackagePath=""/>
  </ItemGroup>

  <!--  This check does not work corectly anymore and also removes the PDB from the symbols packages.
        Need to figure out the correct way to do this, but since the normal packages are building correctly
        I am leaving this as is for now. -->
  <ItemGroup Condition="'$(IsSymbolsPackage)' != 'true'">
    <Content Remove="$(PackageAssetsPath)$(PackageIdFolderName)\**\*.pdb" />
    <Content Remove="$(PackageAssetsPath)$(PackageIdFolderName)\**\*.dwarf" />
    <Content Remove="$(PackageAssetsPath)$(PackageIdFolderName)\**\*.dbg" />
  </ItemGroup>

  <ItemGroup Condition="Exists('packages.config') OR
                        Exists('$(MSBuildProjectName).packages.config') OR
                        Exists('packages.$(MSBuildProjectName).config')">
    <Content Include="$(MSBuildThisFileDirectory)\..\..\runtimes\win-x64\native\*.dll"
             Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="$(MSBuildThisFileDirectory)\..\..\runtimes\win-x86\native\*.dll"
             Condition="'$(PlatformTarget)' == 'x86'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
  </ItemGroup>

  <!-- Work around https://github.com/NuGet/Home/issues/6091 -->
  <ItemDefinitionGroup>
    <PackageReference>
      <PrivateAssets>None</PrivateAssets>
    </PackageReference>
  </ItemDefinitionGroup>

</Project>