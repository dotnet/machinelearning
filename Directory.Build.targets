<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <ItemGroup Condition="'$(IsUnitTestProject)' == 'true'">
    <PackageReference Include="coverlet.msbuild" Version="2.9.0" PrivateAssets="all" />
  </ItemGroup>

  <Target Name="CopyNativeAssembiles" AfterTargets="CopyFilesToOutputDirectory">
    <PropertyGroup>
		<LibPrefix Condition="'$(OS)' != 'Windows_NT'">lib</LibPrefix>
		<LibExtension Condition="'$(OS)' == 'Windows_NT'">.dll</LibExtension>
		<LibExtension Condition="'$(OS)' != 'Windows_NT'">.so</LibExtension>
		<LibExtension Condition="$([MSBuild]::IsOSPlatform('osx'))">.dylib</LibExtension>

		<TargetArchitecture Condition="'$(Platform)' == ''">x64</TargetArchitecture>
		<NativeTargetArchitecture Condition="'$(NativeTargetArchitecture)' == ''">$(TargetArchitecture)</NativeTargetArchitecture>
		<BinDir Condition="'$(BinDir)'==''">$([MSBuild]::NormalizeDirectory('$(RepoRoot)', 'artifacts', 'bin'))</BinDir>
		<NativeOutputPath>$(BinDir)Native\$(NativeTargetArchitecture).$(Configuration)\</NativeOutputPath>

		<Platform Condition="'$(Platform)'==''">AnyCPU</Platform>
		<PlatformConfig>$(Platform).$(Configuration)</PlatformConfig>
		<OutputPath Condition="'$(OutputPath)'==''">$(BinDir)$(MSBuildProjectName)\Debug</OutputPath>
	</PropertyGroup>

		<ItemGroup>
		<NativeAssemblyReference>
			<FullAssemblyPath>$(NativeOutputPath)$(LibPrefix)%(NativeAssemblyReference.Identity)$(LibExtension)</FullAssemblyPath>
		</NativeAssemblyReference>
		</ItemGroup>

		<Copy SourceFiles = "@(NativeAssemblyReference->'%(FullAssemblyPath)')"
			DestinationFolder="$(OutDir)"
			OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
			Retries="$(CopyRetryCount)"
			RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
			UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)"
			UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)">
		<Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
		</Copy>
  </Target>
  <PropertyGroup Condition="'$(Coverage)' == 'true'">
    <!-- https://github.com/tonerdo/coverlet/issues/363 -->
    <DeterministicSourcePaths>false</DeterministicSourcePaths>

    <!-- https://github.com/tonerdo/coverlet/issues/618 -->
    <IncludeTestAssembly>true</IncludeTestAssembly>

    <CollectCoverage>true</CollectCoverage>
    <SingleHit>true</SingleHit>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <CoverletOutputFormat>opencover</CoverletOutputFormat>
    <CoverletOutput>$(BaseOutputPath)$(PlatformConfig)\coverage\coverage.opencover.xml</CoverletOutput>
    <Include></Include>
    <Exclude></Exclude>
    <ExcludeByAttribute>ExcludeFromCodeCoverage</ExcludeByAttribute>
    <ExcludeByFile></ExcludeByFile>
  </PropertyGroup>

  <Target Name="OuterInstrumentModulesNoBuild" BeforeTargets="RunTests" Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' == ''">
    <MSBuild
      Projects="$(MSBuildProjectFullPath)"
      Targets="InnerInstrumentModulesNoBuild"
      Properties="TargetFramework=%(_TargetFramework.Identity)" />
  </Target>

  <Target Name="OuterGenerateCoverageResult" BeforeTargets="Test" Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' == ''">
    <MSBuild
      Projects="$(MSBuildProjectFullPath)"
      Targets="InnerGenerateCoverageResult"
      Properties="TargetFramework=%(_TargetFramework.Identity)" />
  </Target>

  <Target Name="InnerInstrumentModulesNoBuild"
          BeforeTargets="RunTests"
          DependsOnTargets="InstrumentModules"
          Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' != '' AND '$(CollectCoverage)' == 'true'" />

  <Target Name="InnerGenerateCoverageResult"
          BeforeTargets="Test"
          DependsOnTargets="GenerateCoverageResult"
          Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' != '' AND '$(CollectCoverage)' == 'true'" />
</Project>
