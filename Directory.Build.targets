<Project InitialTargets="CheckForBuildTools">
  
  <Target Name="CheckForBuildTools">
    <Error Condition="!Exists('$(ToolsDir)')"
           Text="The tools directory [$(ToolsDir)] does not exist. Please run build in the root of the repo to ensure the tools are installed before attempting to build an individual project." />
  </Target>

  <Target Name="CopyNativeAssemblies"
          BeforeTargets="PrepareForRun">

    <PropertyGroup>
      <LibPrefix Condition="'$(OS)' != 'Windows_NT'">lib</LibPrefix>
      <LibExtension Condition="'$(OS)' == 'Windows_NT'">.dll</LibExtension>
      <LibExtension Condition="'$(OS)' != 'Windows_NT'">.so</LibExtension>
      <LibExtension Condition="$([MSBuild]::IsOSPlatform('osx'))">.dylib</LibExtension>
    </PropertyGroup>

    <ItemGroup>
      <NativeAssemblyReference>
        <FullAssemblyPath>$(NativeOutputPath)$(LibPrefix)%(NativeAssemblyReference.Identity)$(LibExtension)</FullAssemblyPath>
      </NativeAssemblyReference>
    </ItemGroup>

    <ItemGroup>
      <NativeAssemblyReferenceWithMajorVersion>
          <!-- Tensorflow has a different naming scheme for v1.14.0. Those binaries need to be copied along with the standard names -->
          <AssemblyPathWithMajorVersion Condition="'$(OS)' != 'Windows_NT'">$(NativeOutputPath)$(LibPrefix)%(NativeAssemblyReferenceWithMajorVersion.Identity)$(LibExtension).%(NativeAssemblyReferenceWithMajorVersion.MajorVersion)</AssemblyPathWithMajorVersion>
          <AssemblyPathWithMajorVersion Condition="$([MSBuild]::IsOSPlatform('osx'))">$(NativeOutputPath)$(LibPrefix)%(NativeAssemblyReferenceWithMajorVersion.Identity).%(NativeAssemblyReferenceWithMajorVersion.MajorVersion)$(LibExtension)</AssemblyPathWithMajorVersion>
      </NativeAssemblyReferenceWithMajorVersion>
    </ItemGroup>
      
    <Copy SourceFiles = "@(NativeAssemblyReference->'%(FullAssemblyPath)')"
          DestinationFolder="$(OutputPath)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)"
          UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>

    <!-- Optionally copy the native binaries that have a version number attended (Only tensorflow right now) -->
    <Copy Condition="'$(OS)' != 'Windows_NT'"
          SourceFiles = "@(NativeAssemblyReferenceWithMajorVersion->'%(AssemblyPathWithMajorVersion)')"
          DestinationFolder="$(OutputPath)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)"
          UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
      
  </Target>
  
  <Import Project="$(ToolsDir)/versioning.targets" Condition="Exists('$(ToolsDir)/versioning.targets')" />
</Project>